import os
from aiogram import Router, types, F, Bot
from aiogram.filters import CommandStart, Command
from aiogram.types import CallbackQuery
from dotenv import load_dotenv, find_dotenv

from inline_keyboards import main_inline_kb, ways_collages, input_intervals
from routers.common_functions import check_sub
from aiogram.fsm.context import FSMContext

load_dotenv(find_dotenv())
channel_id = int(os.getenv('channel_id'))

router = Router(name=__name__)
load_dotenv(find_dotenv())


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞
@router.message(F.from_user.is_bot == True)
async def handle_bots(message: types.Message):
    return


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def handle_start(message: types.Message):
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
    print("–ù–ê–ñ–ê–õ –°–¢–ê–†–¢")
    if await check_sub(message):
        await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!", reply_markup=main_inline_kb())


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@router.message(Command("help", prefix="/"))
async def handle_help(message: types.Message):
    if await check_sub(message):
        await message.answer(text=f"–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –µ–º—É: @oljick13")


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
@router.callback_query(F.data == "next_inline_kb")
async def handle_already_sub_edited(callback_query: CallbackQuery):
    if await check_sub(callback_query.message, user=callback_query.from_user.id):
        await callback_query.answer(
            text=(
                "–°–ü–ê–°–ò–ë–û ü§ù"
            ),
            show_alert=True,
            cache_time=10
        )
        await callback_query.message.edit_text(
            text=f"–î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –∫–æ–ª–ª–∞–∂", reply_markup=main_inline_kb()
        )


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –≤—ã–±–æ—Ä—É"
@router.callback_query(F.data == 'back_main_inline_kb')
async def back_main_inline_kb(callback_query: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback_query.message.edit_text(
        text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=main_inline_kb()
    )


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –≤—ã–±–æ—Ä—É"
@router.callback_query(F.data == 'close_about_intervals')
async def close_about_intervals(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text='–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ –æ–±—ã—á–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Å–∏–º–≤–æ–ª',
        reply_markup=input_intervals()
    )
